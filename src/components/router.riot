<router>
  <h1 class="text-bold text-3xl">
    Route: { state.route ? state.route.component.name : '_' }
  </h1>
  <route each={route in state.routes} if={route.active} component={route.component} /></route>
  <script>
    import Router from 'core-routing/dist/router.dev.js'
    import Route from './route.riot'

    export default {
      state: {
        routes: [],
        route: undefined,
      },
      onBeforeMount() {
        this.state.routes.push(...this.props.routes.map(route => {
          return Object.assign(route, {
            active: false,
            path: Array.isArray(route.path) ? route.path : [route.path] 
          })
        }))
      },
      onMounted() {
        const self = this
        const state = self.state
        
        self.router = new Router({
          client: {
            onNavigate(e) {
              const route = state.routes.find(r => {
                return r.path.find(path => {
                  return e.$tools.match(e.location.path, path)
                })
              })
              if (state.route) {
                state.route.active = false
              }
              if (route) {
                route.active = true
                state.route = route
              }
              // TODO: figure out how to extract route args/qargs
              self.update()
            },
          }
        })

        self.router.start()
      }
    }
  </script>
</router>
